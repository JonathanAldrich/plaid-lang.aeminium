/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

package plaidapps.workflow;
import java.lang.System;

state workflow{
	var workflowName;
	

	method save(location){
		this <- RawWorkflow with{
			var savedLocation = location;
		};
	}
}

state RawWorkflow case of workflow{
	var savedLocation;
	
	method build(){
		this <- CompiledWorkflow with{
			var compilationOutput = "BPELFile";
		};
	}
}

state CompiledWorkflow case of workflow{
	var compilationOutput;
	
	method deploy(deploymentURL){
		this <- DeployedWorkflow with{
			var serviceURL = deploymentURL;
		};
	}
}

state DeployedWorkflow case of workflow{
	var serviceURL;
	
	method printServiceURL(){
		System.out.println("Service URL"+this.serviceURL);
	}
}

method main(){
	var myWorkflow = new workflow{var workflowName = "HelloWorld";};
	stateCheckerHelper(myWorkflow);
	myWorkflow.save("HelloWorld.xml");
	stateCheckerHelper(myWorkflow);
	myWorkflow.build();
	stateCheckerHelper(myWorkflow);
	myWorkflow.deploy("http://www.wfmc.org/fooWorkflow");
	stateCheckerHelper(myWorkflow);
	myWorkflow.printServiceURL();
}

method stateCheckerHelper(stateToCheck){
	var stateStr = "";
	match(stateToCheck){
		case RawWorkflow{
			stateStr = "RawWorkflow";
		}
		case CompiledWorkflow{
			stateStr = "CompiledWorkflow";
			break;
		}
		case CompiledWorkflow{
			stateStr = "CompiledWorkflow";
			break;
		}
		case DeployedWorkflow{
			stateStr = "DeployedWorkflow";
			break;
		}
		default {
			stateStr = "Invalid state";
		}
	};
	System.out.println(stateStr);
}