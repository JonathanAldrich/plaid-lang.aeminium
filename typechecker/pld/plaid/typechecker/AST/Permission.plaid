package plaid.typechecker.AST;

state Permission {
	val /*Token*/ token;
	val /*String*/ image;
	
	val permSplits = java.util.HashMap.new();
	
	/**
	 * Determines whether a specific permission is writable.  If this permission 
	 * allows a stage change, then the permission is writable and this function 
	 * returns true.  Returns false otherwise.
	 */
	method isWritable();
	
	/**
	 * Determines whether the current permission can be split into 
	 * the specified permission.  If it can, the function returns Some((p2, p3))
	 * where p2 and p3 are the results of the split as specified by the 
	 * permission splitting judgment.  If it cannot, the function returns None.
	 */
	method split(p2);
	
	/**
	 * Compares this permission to the specified permission.  If they are of the
	 * same type, then they are considered equal.  Returns true if the two
	 * permissions are equal and false otherwise.
	 */
	method ==(p2);
	
	/**
	 * Returns the stronger of the two access permissions.
	 */
	method merge(p2);
}