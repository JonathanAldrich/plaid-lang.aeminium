package coreExamples.typeTests;

state A {}

state B {}

state C {}

state StructType {
	method immutable A foo(full B obj) {
		new A;
	}
}

method topLevelDynMethod(obj1, obj2, obj3) {

}

method immutable A topLevelRetType(obj1, obj2, obj3) {
	new A;
}

method immutable A topLevelRetTypeArgType(immutable B obj1, full C obj2, obj3) {
	new A;
}

val topLevelDynField = "no annotation";

val immutable String topLevelTypeField = "with annotation";

val full { method immutable A foo(full B obj); } topLevelStructTypeField = new StructType;

state Changed {
	method changeBack()[full Changed >> full ChangeMe] {
		this <- ChangeMe;
	}
}

state ChangeMe {
	method change()[full ChangeMe >> full Changed] {
		this <- Changed;
	}
}