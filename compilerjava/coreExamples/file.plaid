/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

package coreExamples.file;

state File { }

state OpenFile case of File {
	var filename;
	var bufferedReader;
	
	method read() {
		this.bufferedReader.readLine();
	}

	method close() {
		this <- ClosedFile with { var filename = filename; };
	}
}

state ClosedFile case of File {
	var filename;
	
	method open() {
		this <- OpenFile with { 
			var bufferedReader = java.io.BufferedReader.new(java.io.FileReader.new(this.filename));
		};
	}
}

method main() {
	val testfile = "test.txt";
	
	var file = new ClosedFile{ var filename = testfile; };
	file.open();
	java.lang.System.out.println(file.read());
	java.lang.System.out.println(file.read());
	java.lang.System.out.println(file.read());
	file.close();
	match (file) {
		case OpenFile {
			java.lang.System.out.println("Error: file should be closed.");
		}
		case ClosedFile {
			java.lang.System.out.println("Success: file is closed.");
		}
	};
	// this shouldn't work
	java.lang.System.out.println(file.read());
}